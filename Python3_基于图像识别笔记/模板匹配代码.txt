一 ，大图钟找小图(这是一种方法)
def mathc_img(image,Target,value):
    img_rgb = cv2.imread(image)
    #创建一个原始图像的灰度版本，所有操作在灰度版本中处理，然后在RGB图像中使用相同坐标还原
    img_gray = cv2.cvtColor(img_rgb, cv2.COLOR_BGR2GRAY)
    template = cv2.imread(Target,0)
    #记录图像模板的尺寸,shape会是（1080,1920）很明显这不是我们想要的值,采用倒序的一个处理方法list = [1,2,3] print(list[::-1])
    w, h = template.shape[::-1]
    #使用matchTemplate对原始灰度图像和图像模板进行匹配
    res = cv2.matchTemplate(img_gray,template,cv2.TM_CCOEFF_NORMED)
    #设定阀值 threshold = 0.9
    threshold = value
    #res大于90%
    loc = np.where( res >= threshold)
    #使用灰度图像中的坐标对原始RGB图像进行标记
    for pt in zip(*loc[::-1]):
        cv2.rectangle(img_rgb, pt, (pt[0] + w, pt[1] + h), (7,249,151), 2)   
    cv2.imshow('Detected',img_rgb)
    cv2.waitKey(0)
    cv2.destroyAllWindows()
if __name__ == '__main__':
	image=("C:/Users/succful/Desktop/big.jpg")
	Target=('C:/Users/succful/Desktop/small.jpg')
	value=0.9
	mathc_img(image,Target,value)
一。使用aricv实现
import aircv as ac
from PIL import ImageGrab
import win32api
import win32con
from ctypes import *
import cv2 as cv

def find():
    imsrc = ac.imread('./pic/src.png')
    imsch = ac.imread('./pic/ww.png')
    # test = ac.find_template(imsrc,imsch) #可得到相似度
    # print(test['result'])
    # x,y=test['result']
    pos = ac.find_template(imsrc,imsch) #得到中心点坐标
    print(pos)
    x,y = pos['result']
    return [int(x),int(y)]
def draw_circle(pos):
    imsrc = ac.imread('./pic/src.png')
    x, y = pos
    pos = (x, y)
    print(x,y)
    #cv2.rectangle(img_rgb, pt, (pt[0] + w, pt[1] + h), (7, 249, 151), 2)
    cv.rectangle(imsrc,pos,((0, 1038), (0, 1080), (47, 1038), (47, 1080)),5)
    cv.circle(imsrc, pos,63,(255,0,0), 5)
    cv.imshow('objDetect', imsrc)
    cv.waitKey(0)
    cv.destroyAllWindows()
def click():
    x,y=find()
    windll.user32.SetCursorPos(x, y) #设置坐标
    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0)
    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP, 0, 0, 0, 0)
    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0)
    win32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP, 0, 0, 0, 0)
def main():
    testpos = find()
    draw_circle(testpos)
    click()


if __name__ =="__main__":
    main()

二。
》截图
im =ImageGrab.grab #抓取当前屏幕
im =ImageGrab.grab((300, 100, 1400, 600)) #抓取区间屏幕
im.show()
ImageGrab.grab().save(src_path) #截图保存
》识别图片中得位置
from PIL import Image
import pytesseract #主要识字模块
import re

text = pytesseract.image_to_string(Image.open("./pic/mefw.png"))
print(text)
#res = re.findall('^(?=.*\d)(?=.*[a-zA-Z])(?=.*[\u4E00-\u9FA5])[\u4E00-\u9FA5A-Za-z0-9]*$',text)
res = re.findall(r'([a-zA-Z])',text)
print(res)
wenzi = ''.join(res)
print(wenzi)

































